apiVersion: v1
kind: Service
metadata:
  # this name is added to k8s dns
  name: fleetman-webapp
spec:
  # filter pods by selector
  # this service becomes a network endpoint for other services and external users to connect to (browser)
  selector:
    app: webapp

  ports:
    # name is just documenting that we're expecging http traffice
    - name: http
      port: 80
      # for services of type NodePort, can specify port > 30000 to expose
      # for live you will instead use type load balancer which can expose any port
      nodePort: 30001
      # targetPort defaults to value of port
      # targetPort: 80

  type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-queue
spec:
  selector:
    app: queue

  ports:
    - name: http
      port: 8161
      nodePort: 30002

    - name: endpoint
      port: 61616
      # do not need a nodePort because it won't be exposed to outside world

  type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-position-tracker
spec:
  selector:
    app: position-tracker

  ports:
    - name: http
      port: 8080
      # this rest endpoint /vehicles/City Truck should not be exposed to the outside world, so
      # after resting with a nodePort, remove port and set to ClusterIP

  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-api-gateway
spec:
  selector:
    app: api-gateway

  ports:
    - name: http
      port: 8080

  type: ClusterIP
